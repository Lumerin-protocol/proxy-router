name: Generate Tag Name
description: "Generates a tag name based on branch"
runs:
  using: "composite"
  steps:
    - name: Determine tag name
      id: tag
      shell: bash
      run: |
        VMAJ_NEW=1
        VMIN_NEW=2
        VPAT_NEW=4
        set +o pipefail
        VLAST=$(git describe --tags --abbrev=0 --match='v[1-9]*' refs/remotes/origin/main 2>/dev/null | cut -c2-)
        
        if [ -n "$VLAST" ]; then
            eval $(echo "$VLAST" | awk -F '.' '{print "VMAJ="$1" VMIN="$2" VPAT="$3}')
        else
            VMAJ=0
            VMIN=0
            VPAT=0
        fi

        if [ "$GITHUB_REF_NAME" = "main" ]; then
            if [ "$VMAJ_NEW" -gt "$VMAJ" ]; then
                VMAJ=$VMAJ_NEW
                VMIN=$VMIN_NEW
                VPAT=$VPAT_NEW
            else
                VMIN=$((VMIN+1))
                VPAT=0
            fi
            VFULL=${VMAJ}.${VMIN}.${VPAT}
            VTAG=v$VFULL
        else
            MB=$(git merge-base refs/remotes/origin/main HEAD)
            VPAT=$(git rev-list --count --no-merges ${MB}..HEAD)
            VFULL=${VMAJ}.${VMIN}.${VPAT}
            RNAME=${GITHUB_REF_NAME##*/}
            [ "$GITHUB_EVENT_NAME" = "pull_request" ] && RNAME=pr${GITHUB_REF_NAME%/merge}
            VTAG=v${VFULL}-${RNAME}
        fi
        # Output to GitHub Actions environment

        echo "VLAST=$VLAST VMAJ=$VMAJ VMIN=$VMIN VPAT=$VPAT VFULL=$VFULL VTAG=$VTAG"
        echo "TAG_NAME=${VTAG}" >> $GITHUB_ENV
        echo "VTAG=${VTAG}" >> $GITHUB_ENV
        echo "VFULL=${VFULL}" >> $GITHUB_ENV
        echo "IMAGE_NAME_BASE=ghcr.io/lumerin-protocol/proxy-router" >> $GITHUB_ENV
        echo "IMAGE_NAME=ghcr.io/lumerin-protocol/proxy-router:${VTAG}" >> $GITHUB_ENV
        echo "VLAST=$VLAST VMAJ=$VMAJ VMIN=$VMIN VPAT=$VPAT VFULL=$VFULL VTAG=$VTAG"
